stages:
  - check
  - build
  - deploy

check-web:
  stage: check
  image: node:16
  before_script:
    - pnpm install
  script:
    - pnpm fix
  when: manual

check-server:
  stage: check
  image: python:3.12
  before_script:
    - pip3 install black
    - pip3 install ruff
    - pip3 install mypy
  script:
    - black ./server --check --diff
    - ruff check ./server --diff
    - mypy ./server --explicit-package-bases
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

build-web:
  stage: build
  image: docker
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/client_web ./client_web --platform=linux/amd64
    - docker push $CI_REGISTRY_IMAGE/client_web:latest
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

build-server:
  stage: build
  image: docker
  services:
    - docker:dind
  before_script:
    - "cp $ENV_FILE ./server/.env"
    - "cp $GOOGLE_SECRET ./server/client_secret_648065420240-uhj68ojuts1bro413agqblc1e7q8bc96.apps.googleusercontent.com.json"
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/server ./server --platform=linux/amd64
    - docker push $CI_REGISTRY_IMAGE/server:latest
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

deploy:
  stage: deploy
  image: ubuntu
  before_script:
    - apt-get update -qy
    - apt-get install -y openssh-client
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY"
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p /root/.ssh
    - chmod 700 /root/.ssh
    - echo "$SSH_PRIVATE_KEY" > /root/.ssh/id_rsa
    - chmod 600 /root/.ssh/id_rsa
    - ssh-keyscan -H $IP_PREPROD >> ~/.ssh/known_hosts
    - ssh-keyscan -H $IP_PREPROD >> /root/.ssh/known_hosts
  script:
    - ssh $USER@$IP_PREPROD "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"
    - ssh $USER@$IP_PREPROD "docker pull $CI_REGISTRY_IMAGE/client_web:latest"
    - ssh $USER@$IP_PREPROD "docker pull $CI_REGISTRY_IMAGE/server:latest"
    - ssh $USER@$IP_PREPROD "docker-compose down"
    - ssh $USER@$IP_PREPROD "docker-compose up -d"
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH